@model CSM.Web.Models.ContactViewModel
@using CSM.Common.Resources
@{
    ViewBag.Title = Resource.Lbl_SearchContactRelationship;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section MainMenu
{
    @Html.Action("MainMenu", "MenuNavigator", new { selectedMenu = CSM.Entity.MenuCode.Master })
}

@section Breadcrumb {
    @*<strong class="font-blue">Master &rsaquo;&rsaquo;</strong>
        <strong class="font-green-jungle">Search Contact Relationship</strong>*@
    <strong class="font-blue">@Html.ActionLink(Resource.Lbl_Master, "Index", "Configuration", null, new { @class = "font-blue" })</strong>
    <strong class="font-green-jungle">&rsaquo;&rsaquo; @Resource.Lbl_SearchContactRelationship</strong>
}

@using (Html.BeginForm("Search", "Contact", FormMethod.Post, new { @class = "form-horizontal", @id = "form1", @DefaultButton = "btnSearch" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div id="dvForm" class="form-box">
        <h5 class="form-title">@Resource.Lbl_SearchContactRelationship</h5>
        <div class="row margin-top-15">
            <div class="col-md-12">
                <div class="form-group">
                    <div class="col-md-2">
                        <p class="form-control-static">
                            สถานะ:
                        </p>
                    </div>
                    <div class="col-md-2 nopadding">
                        @Html.DropDownListFor(model => model.Status, Model.StatusList, Resource.Ddl_PleaseSelect, new { @class = "form-control input-sm", id = "ddlStatus" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <div class="col-md-2">
                        <p class="form-control-static">
                            ชื่อความสัมพันธ์:
                        </p>
                    </div>
                    <div class="col-md-2 nopadding">
                        @Html.TextBoxFor(model => model.SearchFilter.RelationshipName, new { @class = "form-control input-sm", @id = "txtRelationshipName", @maxLength = 50 })
                        @Html.ValidationMessageFor(model => model.SearchFilter.RelationshipName)
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <div class="col-md-2">
                        <p class="form-control-static">
                            รายละเอียดความสัมพันธ์:
                        </p>
                    </div>
                    <div class="col-md-10 nopadding">
                        @Html.TextBoxFor(model => model.SearchFilter.RelationshipDesc, new { @class = "form-control input-sm input-xlarge", @id = "txtRelationshipDesc", @maxLength = 50 })
                        @Html.ValidationMessageFor(model => model.SearchFilter.RelationshipDesc)
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="clear"></div>
    <div class="panel-actions">
        <div class="pull-left">
            <button id="btnAdd" type="button" class="btn btn-green btn-sm">
                <i class="fa fa-plus"></i>&nbsp;New Relation
            </button>
        </div>
        <div class="pull-right">
            <div class="form-inline">
                <div class="form-group">
                    <button id="btnSearch" type="button" class="btn btn-blue btn-sm btn-xsmall">
                        <i class="fa fa-search"></i>&nbsp;Search
                    </button>
                </div>
                <div class="form-group">
                    <button id="btnReset" type="button" class="btn btn-gray btn-sm btn-xsmall">Clear</button>
                </div>
            </div>
        </div>
    </div>
    <div class="clear"></div>
    <div id="dvSearchResult">
        @if (Model.RelationshipList != null)
        {
            Html.RenderPartial("~/Views/Contact/_ContactList.cshtml", Model);
        }
    </div>
}
<div id="dvTarget"></div>
@section masterjs
{
    <script type="text/javascript">
        var searchFilter;
        var successFilter;
        var pageSize = 20;

        $jq(function () {
            initializeSearchFilter();

            $jq("#form1").keypress(function (e) {
                var kCode = e.keyCode || e.charCode; //for cross browser
                if (kCode == 13) {
                    var defaultbtn = $jq(this).attr("DefaultButton");
                    $jq("#" + defaultbtn).focus();
                    $jq("#" + defaultbtn).click();
                    return false;
                }
            });

            $jq("#btnSearch").click(function (e) {
                e.preventDefault();
                clearServerErrors();
                searchFilter.RelationshipName = $jq("#txtRelationshipName").val().trim(),
                searchFilter.RelationshipDesc = $jq("#txtRelationshipDesc").val().trim(),
                searchFilter.Status = $jq("#ddlStatus").val(),
                searchFilter.PageNo = 1;
                loadData();
                return false;
            });

            $jq("#btnReset").click(function (e) {
                e.preventDefault();
                $jq("#dvForm input[type='text'],#dvForm select").val('');
                initializeSearchFilter();
                $jq("#dvSearchResult").html('');
                clearServerErrors();
                return false;
            });

            $jq('#btnAdd').click(function (e) {
                e.preventDefault();
                initContactEdit();
                return false;
            });
        });

        function initializeSearchFilter() {
            searchFilter = {
                RelationshipName: $jq("#txtRelationshipName").val(),
                RelationshipDesc: $jq("#txtRelationshipDesc").val(),
                Status: $jq("#ddlStatus").val(),
                PageNo: '@Model.SearchFilter.PageNo',
                PageSize: '@Model.SearchFilter.PageSize',
                SortField: '@Model.SearchFilter.SortField',
                SortOrder: '@Model.SearchFilter.SortOrder'
            };
            successFilter = searchFilter;
        };

        function initializePaging() {
            $jq("#dvSearchResult .input-page").change(function (event) {
                searchFilter = successFilter;
                searchFilter.PageNo = $jq(this).val();
                loadData();
                return false;
            }).keypress(function (event) {
                return validateDigit(event);
            });

            $jq("#dvSearchResult #pagesizelist").change(function (event) {
                searchFilter = successFilter;
                searchFilter.PageNo = "1";
                searchFilter.PageSize = $jq(this).val();
                loadData();
                return false;
            });

            $jq('#dvSearchResult .pagination ul li a').on('click', function (event) {
                searchFilter = successFilter;
                searchFilter.PageNo = getUrlParameter($jq(this).attr("href"), "page");
                loadData();
                return false;
            });
        };

        function sortField(selectedSortField) {
            if (selectedSortField == searchFilter.SortField)
                searchFilter.SortOrder = (searchFilter.SortOrder == 'ASC') ? 'DESC' : 'ASC';
            else
                searchFilter.SortOrder = 'ASC';
            searchFilter.SortField = selectedSortField;
            searchFilter.PageNo = 1;
            loadData();
        }

        function loadData() {
            if (searchFilter.Status == "" && searchFilter.RelationshipName == "" && searchFilter.RelationshipDesc == "") {
                var warningMsg = '@Resource.Msg_EnteredAtLeastOneCriteria';
                doModal('dvAlertMsg', 'Message Dialog', warningMsg, '', '');
                return false;
            }

            $jq.ajax({
                url: '@Url.Action("ContactList", "Contact")',
                type: "POST",
                data: addAntiForgeryToken(searchFilter),
                beforeSend: function () { $jq("#dvLoading").show(); },
                complete: function () { $jq("#dvLoading").hide(); },
                success: function (result) {
                    if (result.Valid == null) {
                        $jq("#dvSearchResult").html('');
                        successFilter = searchFilter;
                        $jq("#dvSearchResult").html(result);
                        initializePaging();
                    } else {
                        showServerErrors(result);
                    }
                },
                error: function (xhr) {
                    var handleMsg = '@CSM.Common.Resources.Resource.Error_System';
                    ajaxErrorHandling(xhr, handleMsg, '@FormsAuthentication.LoginUrl', '@Url.Action("AccessDenied", "User")');
                }
            });
            return false;
        }

        function initContactEdit(relationshipId) {
            $jq("#dvLoading").show();
            var actionUrl = '@Url.Action("InitEdit", "Contact")';
            $jq('#dvTarget').html('');
            var inputRelId = $jq("<input>").attr("type", "hidden").attr("name", "relationshipId").val(relationshipId);
            var inputToken = $jq("<input>").attr("type", "hidden").attr("name", "__RequestVerificationToken").val(getAntiForgeryToken());
            $jq('#dvTarget').append('<form action="' + actionUrl + '" method="POST" class="hidden"></form>');
            $jq('#dvTarget form').append($jq(inputRelId));
            $jq('#dvTarget form').append($jq(inputToken));
            $jq('#dvTarget form').submit();
        }
    </script>
}
