@model CSM.Web.Models.BranchViewModel
@using CSM.Common.Resources
@using MvcPaging;
@helper LabelForSort(string headerText, string fieldName, string sortField, string sortOrder)
{
    <a href="javascript:;" onclick="setBrSortField('@fieldName');return false;">
        @headerText
        @if (fieldName.ToLower().Equals(sortField.ToLower()))
        {
            if (sortOrder.Equals("ASC"))
            {<i class="fa fa-sort-asc"></i>}
            else
            {<i class="fa fa-sort-desc"></i> }
        }
        else
        {<i class="fa fa-sort"></i>}
    </a>
}

@Html.HiddenFor(model => model.SearchFilter.JsonBranch)
@if (Model.BranchList == null || Model.SearchFilter.TotalRecords == 0)
{
    string sortField = Model.SearchFilter.SortField;
    string sortOrder = Model.SearchFilter.SortOrder;
    <div class="table-responsive margin-top-10">
        <table class="table table-hover datatable">
            <thead>
                <tr>
                    <th class="center" style="width:10%!important;">&nbsp;</th>
                    <th style="width:85%!important;">Branch Name</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td colspan="2" class="center">@Resource.Msg_NoRecords</td>
                </tr>
            </tbody>
        </table>
    </div>
}
else
{
    string sortField = Model.SearchFilter.SortField;
    string sortOrder = Model.SearchFilter.SortOrder;

    <div class="form-inline nopadding">
        <div class="form-group">
            @Html.Raw(Html.Pager(
                new Options
                {
                    PageSize = Model.SearchFilter.PageSize,
                    TotalItemCount = Model.SearchFilter.TotalRecords,
                    CurrentPage = Model.SearchFilter.PageNo,
                    ItemTexts = new ItemTexts
                    {
                        First = "<i class='fa fa-step-backward' style='font-size: 0.8em'></i>",
                        Previous = "<i class='fa fa-caret-left'></i>",
                        Next = "<i class='fa fa-caret-right'></i>",
                        Last = "<i class='fa fa-step-forward' style='font-size: 0.8em'></i>",
                    },
                    IsShowFirstLast = true,
                    CssClass = "pager",
                    IsShowInputPage = true
                },
                new { PageSize = ViewBag.PageSize }))

        </div>
        <div class="form-group">
            @Html.DropDownList("PageSize", new SelectList(ViewBag.PageSizeList, "Key", "Value"), new { @class = "form-control input-xs", id = "pagesizelist" })
        </div>
        <div class="form-group text-nowrap margin-left-8">
            <strong>
                @MvcHtmlString.Create(string.Format(Resource.Lbl_Paging, @Model.SearchFilter.FirstPageIndex, @Model.SearchFilter.LastPageIndex, @Model.SearchFilter.TotalRecordsDisplay))
            </strong>
        </div>
    </div>
    <div class="table-responsive margin-bottom-15">
        <table id="tblBranchList" class="table table-hover datatable">
            <thead>
                <tr>
                    <th class="center text-nowrap" style="width:10%!important;">
                        <input type="checkbox" class="checkAll" />
                    </th>
                    <th class="center text-nowrap" style="width:85%!important;">@LabelForSort("Branch Name", "BranchName", sortField, sortOrder)</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.BranchList.Count(); i++)
                {
                    var item = Model.BranchList.ElementAt(i);
                    <tr>
                        <td class="center">
                            @Html.CheckBoxFor(model => model.BranchCheckBoxes[i].Checked, new { id = "cblBranch_" + i })
                            @Html.HiddenFor(model => model.BranchCheckBoxes[i].Value, new { @Value = item.BranchId })
                        </td>
                        <td>@item.BranchName</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}