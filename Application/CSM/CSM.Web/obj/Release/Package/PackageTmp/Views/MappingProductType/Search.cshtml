@using CSM.Common.Resources
@model CSM.Web.Models.MappingProductTypeViewModel

@{
    ViewBag.Title = "Search Mapping Product";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section MainMenu
{
    @Html.Action("MainMenu", "MenuNavigator", new { selectedMenu = CSM.Entity.MenuCode.Master })
}
@section Breadcrumb {
    @*<strong class="font-blue">Mapping Product &rsaquo;&rsaquo;</strong>*@
    <strong class="font-blue"> @Html.ActionLink(Resource.Lbl_Master, "Index", "Configuration", null, new { @class = "font-blue" }) </strong>
    <strong class="font-green-jungle">&rsaquo;&rsaquo; Search Mapping Product</strong>
}
<div class="form-horizontal">
    <h5 class="form-title">Search Mapping Product</h5>
    <hr class="dotted-line"/>
    <div class="row margin-top-15">
        <div class="form-group">
            <div class="col-sm-3">
                <label class="control-label">Product Group :</label>
            </div>
            <div class="col-sm-3">
                <input type="text" id="txtProductGroupName" class="form-control input-sm" placeholder="Auto complete"/>
            </div>
            <div class="col-sm-3">
                <label class="control-label">Product :</label>
            </div>
            <div class="col-sm-3">
                <input type="text" id="txtProductName" class="form-control input-sm" placeholder="Auto complete"/>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group">
            <div class="col-sm-3">
                <label class="control-label">Campaign :</label>
            </div>
            <div class="col-sm-3">
                <input type="text" id="txtCampaignServiceName" class="form-control input-sm" placeholder="Auto complete"/>
            </div>
            <div class="col-sm-3">
                <label class="control-label">Type :</label>
            </div>
            <div class="col-sm-3">
                <input type="text" id="txtTypeName" class="form-control input-sm" placeholder="Auto complete"/>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group">
            <div class="col-sm-3">
                <label class="control-label">Area :</label>
            </div>
            <div class="col-sm-3">
                <input type="text" id="txtAreaName" class="form-control input-sm" placeholder="Auto complete"/>
            </div>
            <div class="col-sm-3">
                <label class="control-label">Sub Area :</label>
            </div>
            <div class="col-sm-3">
                <input type="text" id="txtSubAreaName" class="form-control input-sm" placeholder="Auto complete"/>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group">
            <div class="col-sm-3">
                <label class="control-label">Verify :</label>
            </div>
            <div class="col-sm-3">
                <select id="selectVerify" class="form-control input-sm">
                    <option value="" selected>-- กรุณาระบุ --</option>
                    <option value="all">ทั้งหมด</option>
                    <option value="true">Yes</option>
                    <option value="false">No</option>
                </select>
            </div>
            <div class="col-sm-3">
                <label class="control-label">Owner :</label>
            </div>
            <div class="col-sm-3">
                @*                <input type="text" id="txtOwnerName" class="form-control input-sm"/>*@
                <input type="text" id="txtOwnerName" class="form-control input-sm" placeholder="Auto complete" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group">
            <div class="col-sm-3">
                <label class="control-label">Verify OTP :</label>
            </div>
            <div class="col-sm-3">
                <select id="selectVerifyOTP" class="form-control input-sm">
                    <option value="" selected>-- กรุณาระบุ --</option>
                    <option value="all">ทั้งหมด</option>
                    <option value="true">Yes</option>
                    <option value="false">No</option>
                </select>
            </div>
            <div class="col-sm-3">
                <label class="control-label">Status :</label>
            </div>
            <div class="col-sm-3">
                <select id="selectStatus" class="form-control input-sm">
                    <option value="" selected>-- กรุณาระบุ --</option>
                    <option value="all">ทั้งหมด</option>
                    <option value="true">Active</option>
                    <option value="false">Inactive</option>
                </select>
            </div>
        </div>
    </div>
    <hr class="dashed-line"/>
    <div class="row">
        <form action="@Url.Action("Create", "MappingProductType")" method="post" style="display: inline-block">
            <button class="btn btn-sm btn-success"><i class="fa fa-plus"></i> Create New</button>
        </form>
        <div class="pull-right">
            <span id="btnSearch" class="btn btn-sm btn-primary"><i class="fa fa-search"></i> Search</span>
            <span id="btnClear" class="btn btn-sm btn-default"><i class="fa fa-file-o"></i> Clear</span>
        </div>
    </div>
    <div class="clearfix"></div>
    <hr class="dashed-line"/>
    <div class="clear"></div>

    <div id="dvSearchMappingProduct">
        @if (Model.MappingProductList != null)
        {
            Html.RenderPartial("~/Views/MappingProductType/_MappingProductList.cshtml", Model);
        }
    </div>
</div>
<div id="dvTarget"></div>
@Html.Partial("_Antiforgery")
@section masterjs{
    <script type="text/javascript">
        var searchFilter;
        var successFilter;

        $jq(document).ready(function () {

            initAutoComplete();

            $jq("#btnSearch").click(onBtnSearchClick);
            $jq("#btnClear").click(onBtnClearClick);

            initializeSearchFilter();
            initializePaging();

        });

        function onBtnSearchClick() {
            clearServerErrors();
            searchFilter.PageNo = "1";
            loadMappingProductList();
        }

        function loadMappingProductList() {
            //map searchFilter data
            searchFilter.ProductGroupId = $jq("#txtProductGroupName").val();
            searchFilter.ProductId = $jq("#txtProductName").val();
            searchFilter.CampaignId = $jq("#txtCampaignServiceName").val();
            searchFilter.TypeId = $jq("#txtTypeName").val();
            searchFilter.AreaId = $jq("#txtAreaName").val();
            searchFilter.SubAreaId = $jq("#txtSubAreaName").val();
            searchFilter.OwnerId = $jq("#txtOwnerName").val();
            searchFilter.IsVerify = $jq("#selectVerify").val();
            searchFilter.IsActive = $jq("#selectStatus").val();
            searchFilter.IsVerifyOTP = $jq("#selectVerifyOTP").val();

            if ((searchFilter.ProductGroupId == null || searchFilter.ProductGroupId == "")
                && (searchFilter.ProductId == null || searchFilter.ProductId == "")
                && (searchFilter.CampaignId == null || searchFilter.CampaignId == "")
                && (searchFilter.TypeId == null || searchFilter.TypeId == "")
                && (searchFilter.AreaId == null || searchFilter.AreaId == "")
                && (searchFilter.SubAreaId == null || searchFilter.SubAreaId == "")
                && (searchFilter.OwnerId == null || searchFilter.OwnerId == "")
                && (searchFilter.IsVerify == null || searchFilter.IsVerify == "")
                && (searchFilter.IsActive == null || searchFilter.IsActive == "")
                && (searchFilter.IsVerifyOTP == null || searchFilter.IsVerifyOTP == ""))
            {
                doModal('dvAlertMsg', 'Message Dialog', 'กรุณากรอกข้อมูลอย่างน้อย 1 เงื่อนไข', '', '');
                return false;
            }

            if (searchFilter.IsVerifyOTP == "all") {
                searchFilter.IsVerifyOTP = "";
            }

            $jq.ajax({
                    url: "@Url.Action("SearchMappingList", "MappingProductType")",
                    method: "POST",
                    data: searchFilter,
                    beforeSend: function() { $jq("#dvLoading").show(); },
                    complete: function() { $jq("#dvLoading").hide() }
                })
                .done(function (result) {
                    try {
                        if (isLoginForm(result)) {
                            location.replace('@FormsAuthentication.LoginUrl');
                            return;
                        }
                    }
                    catch (err) {
                    }
                    if (result.Valid == null) {
                        $jq("#dvSearchMappingProduct").html('');
                        successFilter = searchFilter;
                        $jq("#dvSearchMappingProduct").html(result);
                        initializePaging();
                    } else {
                        showServerErrors(result);
                    }
                })
                .fail(function() {
                    if (xhr.status === 401) {
                        location.replace('@FormsAuthentication.LoginUrl');
                        return;
                    } else {
                        var errorMsg = String.format('<strong>Error:</strong>&nbsp;{0}', '@CSM.Common.Resources.Resource.Error_System');
                        doModal('dvAlertMsg', 'Message Dialog', errorMsg, '', '');
                    }
                });
        }

        function initializeSearchFilter() {
            searchFilter = {
                PageNo: "1",
                PageSize: 15,
                SortField: "",
                SortOrder: "",
                __RequestVerificationToken: getAntiForgeryToken()
            }

            successFilter = searchFilter;
        }

        function initializePaging() {
            $jq("#dvSearchMappingProduct .input-page").change(function (event) {
                searchFilter = successFilter;
                searchFilter.PageNo = $jq(this).val();
                loadMappingProductList();
                return false;
            }).keypress(function (event) {
                return validateDigit(event);
            });

            $jq("#dvSearchMappingProduct #pagesizelist").change(function (event) {
                searchFilter = successFilter;
                searchFilter.PageNo = "1";
                searchFilter.PageSize = $jq(this).val();
                loadMappingProductList();
                return false;
            });

            $jq('#dvSearchMappingProduct .pagination ul li a').on('click', function (event) {
                searchFilter = successFilter;
                searchFilter.PageNo = getUrlParameter($jq(this).attr("href"), "page");
                loadMappingProductList();
                return false;
            });
        }

        function sortField(selectedSortField) {
            if (selectedSortField == searchFilter.SortField)
                searchFilter.SortOrder = (searchFilter.SortOrder == 'ASC') ? 'DESC' : 'ASC';
            else
                searchFilter.SortOrder = 'ASC';
            searchFilter.SortField = selectedSortField;
            searchFilter.PageNo = 1;
            loadMappingProductList();
        }

        function onBtnClearClick() {
            $jq("#txtProductGroupName").select2("val", "");
            $jq("#txtProductName").select2("val", "");
            $jq("#txtCampaignServiceName").select2("val", "");
            $jq("#txtTypeName").select2("val", "");
            $jq("#txtAreaName").select2("val", "");
            $jq("#txtSubAreaName").select2("val", "");
            $jq("#txtOwnerName").select2("val","");

            $jq("#selectVerify").val("");
            $jq("#selectStatus").val("");

            $jq("#dvSearchMappingProduct").html("");

            $jq("#selectVerifyOTP").val("");
        }

        function onEditClick(mapProductId) {
            $jq('#dvTarget').html('<form action="@Url.Action("Edit", "MappingProductType")" name="frmEdit" id="frmEdit" method="post" style="display:none;" target="_blank">@Html.AntiForgeryToken()<input type="text" name="mapProductId" value="' + mapProductId + '" /></form>');
            document.forms['frmEdit'].submit();
        }

    </script>
    <script type="text/javascript">

        // [START] AutoComplete
        function initAutoComplete() {
            initAutoCompleteProductGroup();
            initAutoCompleteProduct();
            initAutoCompleteCampaignService();

            initAutoCompleteArea();
            initAutoCompleteSubArea();
            initAutoCompleteType();
            initAutoCompleteOwnerName();
        }

        function initAutoCompleteProductGroup() {

            $jq("#txtProductGroupName").select2({
                placeholder: '@Resource.Ddl_AutoComplete',
                minimumInputLength: '@CSM.Common.Utilities.Constants.MinLenght.AutoComplete',
                language: "th",
                allowClear: true,
                ajax: {
                    url: "@Url.Action("AutoCompleteSearchProductGroup", "AutoComplete")",
                    dataType: 'json',
                    type: "post",
                    quietMillis: 150,
                    data: function(keyword) {
                        return {
                            keyword: keyword,
                            productId: $jq("#txtProductName").val(),
                            campaignServiceId: $jq("#txtCampaignServiceName").val(),
                            isAllStatus: true
                        };
                    },
                    results: function (data) {
                        if (data.RedirectUrl != undefined) {
                            topLocation(data.RedirectUrl);
                            return;
                        }
                        return {
                            results: $jq.map(data, function(item) {
                                return {
                                    text: item.ProductGroupName,
                                    id: item.ProductGroupId
                                }
                            })
                        };
                    },
                    error: function (xhr) {
                        var handleMsg = '@CSM.Common.Resources.Resource.Error_System';
                        ajaxErrorHandling(xhr, handleMsg, '@FormsAuthentication.LoginUrl', '@Url.Action("AccessDenied", "User")');
                    }
                }
            });
        }

        function initAutoCompleteProduct() {

            $jq("#txtProductName").select2({
                placeholder: '@Resource.Ddl_AutoComplete',
                minimumInputLength: '@CSM.Common.Utilities.Constants.MinLenght.AutoComplete',
                language: "th",
                allowClear: true,
                ajax: {
                    url: "@Url.Action("AutoCompleteSearchProduct", "AutoComplete")",
                    dataType: 'json',
                    type: "post",
                    quietMillis: 150,
                    data: function(keyword) {
                        return {
                            keyword: keyword,
                            productGroupId: $jq("#txtProductGroupName").val(),
                            campaignServiceId: $jq("#txtCampaignServiceName").val(),
                            isAllStatus: true
                        };
                    },
                    results: function (data) {
                        if (data.RedirectUrl != undefined) {
                            topLocation(data.RedirectUrl);
                            return;
                        }
                        return {
                            results: $jq.map(data, function(item) {
                                return {
                                    text: item.ProductName,
                                    id: item.ProductId
                                }
                            })
                        };
                    },
                    error: function (xhr) {
                        var handleMsg = '@CSM.Common.Resources.Resource.Error_System';
                        ajaxErrorHandling(xhr, handleMsg, '@FormsAuthentication.LoginUrl', '@Url.Action("AccessDenied", "User")');
                    }
                }
            });
        }

        function initAutoCompleteCampaignService() {

            $jq("#txtCampaignServiceName").select2({
                placeholder: '@Resource.Ddl_AutoComplete',
                minimumInputLength: '@CSM.Common.Utilities.Constants.MinLenght.AutoComplete',
                language: "th",
                allowClear: true,
                ajax: {
                    url: "@Url.Action("AutoCompleteSearchCampaignService", "AutoComplete")",
                    dataType: 'json',
                    type: "post",
                    quietMillis: 150,
                    data: function(keyword) {
                        return {
                            keyword: keyword,
                            productGroupId: $jq("#txtProductGroupName").val(),
                            productId: $jq("#txtProductName").val(),
                            isAllStatus: true
                        };
                    },
                    results: function (data) {
                        if (data.RedirectUrl != undefined) {
                            topLocation(data.RedirectUrl);
                            return;
                        }
                        return {
                            results: $jq.map(data, function(item) {
                                return {
                                    text: item.CampaignServiceName,
                                    id: item.CampaignServiceId
                                }
                            })
                        };
                    },
                    error: function (xhr) {
                        var handleMsg = '@CSM.Common.Resources.Resource.Error_System';
                        ajaxErrorHandling(xhr, handleMsg, '@FormsAuthentication.LoginUrl', '@Url.Action("AccessDenied", "User")');
                    }
                }
            });
        }

        function initAutoCompleteArea() {

            $jq("#txtAreaName").select2({
                placeholder: '@Resource.Ddl_AutoComplete',
                minimumInputLength: '@CSM.Common.Utilities.Constants.MinLenght.AutoComplete',
                language: "th",
                allowClear: true,
                ajax: {
                    url: "@Url.Action("AutoCompleteSearchArea", "AutoComplete")",
                    dataType: 'json',
                    type: "post",
                    quietMillis: 150,
                    data: function(keyword) {
                        return {
                            keyword: keyword,
                            subAreaId: $jq("#txtSubAreaName").val(),
                            isAllStatus: true
                        };
                    },
                    results: function (data) {
                        if (data.RedirectUrl != undefined) {
                            topLocation(data.RedirectUrl);
                            return;
                        }
                        return {
                            results: $jq.map(data, function(item) {
                                return {
                                    text: item.AreaName,
                                    id: item.AreaId
                                }
                            })
                        };
                    },
                    error: function (xhr) {
                        var handleMsg = '@CSM.Common.Resources.Resource.Error_System';
                        ajaxErrorHandling(xhr, handleMsg, '@FormsAuthentication.LoginUrl', '@Url.Action("AccessDenied", "User")');
                    }
                }
            });
        }

        function initAutoCompleteSubArea() {

            $jq("#txtSubAreaName").select2({
                placeholder: '@Resource.Ddl_AutoComplete',
                minimumInputLength: '@CSM.Common.Utilities.Constants.MinLenght.AutoComplete',
                language: "th",
                allowClear: true,
                ajax: {
                    url: "@Url.Action("AutoCompleteSearchSubArea", "AutoComplete")",
                    dataType: 'json',
                    type: "post",
                    quietMillis: 150,
                    data: function(keyword) {
                        return {
                            keyword: keyword,
                            areaId: $jq("#txtAreaName").val(),
                            isAllStatus: true
                        };
                    },
                    results: function (data) {
                        if (data.RedirectUrl != undefined) {
                            topLocation(data.RedirectUrl);
                            return;
                        }
                        return {
                            results: $jq.map(data, function(item) {
                                return {
                                    text: item.SubAreaName,
                                    id: item.SubAreaId
                                }
                            })
                        };
                    },
                    error: function (xhr) {
                        var handleMsg = '@CSM.Common.Resources.Resource.Error_System';
                        ajaxErrorHandling(xhr, handleMsg, '@FormsAuthentication.LoginUrl', '@Url.Action("AccessDenied", "User")');
                    }
                }
            });
        }

        function initAutoCompleteType() {

            $jq("#txtTypeName").select2({
                placeholder: '@Resource.Ddl_AutoComplete',
                minimumInputLength: '@CSM.Common.Utilities.Constants.MinLenght.AutoComplete',
                language: "th",
                allowClear: true,
                ajax: {
                    url: "@Url.Action("AutoCompleteSearchType", "AutoComplete")",
                    dataType: 'json',
                    type: "post",
                    quietMillis: 150,
                    data: function(keyword) {
                        return {
                            keyword: keyword,
                            isAllStatus: true
                        };
                    },
                    results: function (data) {
                        if (data.RedirectUrl != undefined) {
                            topLocation(data.RedirectUrl);
                            return;
                        }
                        return {
                            results: $jq.map(data, function(item) {
                                return {
                                    text: item.TypeName,
                                    id: item.TypeId
                                }
                            })
                        };
                    },
                    error: function (xhr) {
                        var handleMsg = '@CSM.Common.Resources.Resource.Error_System';
                        ajaxErrorHandling(xhr, handleMsg, '@FormsAuthentication.LoginUrl', '@Url.Action("AccessDenied", "User")');
                    }
                }
            });
        }

        function initAutoCompleteOwnerName() {
            $jq("#txtOwnerName").select2({
                placeholder: '@Resource.Ddl_AutoComplete',
                minimumInputLength: '@CSM.Common.Utilities.Constants.MinLenght.AutoComplete',
                language: "th",
                allowClear: true,
                ajax: {
                    url: "@Url.Action("AutoCompleteSearchUser", "AutoComplete")",
                    dataType: 'json',
                    type: "post",
                    quietMillis: 150,
                    data: function(keyword) {
                        return {
                            keyword: keyword
                        };
                    },
                    results: function (data) {
                        if (data.RedirectUrl != undefined) {
                            topLocation(data.RedirectUrl);
                            return;
                        }
                        return {
                            results: $jq.map(data, function(item) {
                                return {
                                    text: item.UserDisplayName,
                                    id: item.UserId
                                }
                            })
                        };
                    },
                    error: function (xhr) {
                        var handleMsg = '@CSM.Common.Resources.Resource.Error_System';
                        ajaxErrorHandling(xhr, handleMsg, '@FormsAuthentication.LoginUrl', '@Url.Action("AccessDenied", "User")');
                    }
                }
            });
        }
    </script>
<!-- End of AutoComplete -->
}
