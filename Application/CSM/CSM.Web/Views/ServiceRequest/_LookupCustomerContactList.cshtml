@using CSM.Common.Resources
@using CSM.Common.Utilities
@using MvcPaging
@model CSM.Web.Models.LookupCustomerContactViewModel

@helper LabelForSort(string headerText, string fieldName, string sortField, string sortOrder)
{
    <a href="javascript:;" onclick="sortField('@fieldName');return false;">
        @headerText
        @if (fieldName.ToLower().Equals(sortField.ToLower()))
        {
            if (sortOrder.Equals("ASC"))
            {<i class="fa fa-sort-asc"></i>}
            else
            {<i class="fa fa-sort-desc"></i> }
        }
        else
        {<i class="fa fa-sort"></i>}
    </a>
}

<hr class="dashed-line clear" />

@if (Model.ContactTableList == null || Model.CustomerContactSearchFilter.TotalRecords == 0)
{
    string sortField = Model.CustomerContactSearchFilter.SortField;
    string sortOrder = Model.CustomerContactSearchFilter.SortOrder;

    <div class="table-responsive margin-top-10">
        <table class="table table-hover datatable">
            <thead>
                <tr>
                    <th>Action</th>
                    <th>Product</th>
                    <th title="เลขที่บัตรประชาชน/นิติบุุคคล/Passport/Employee No.">Subscription ID</th>
                    <th>ชื่อผู้ติดต่อ</th>
                    <th>นามสกุลผู้ติดต่อ</th>
                    <th>ความสัมพันธ์</th>
                    <th>เลขที่บัญชี/สัญญา</th>
                    <th>เบอร์โทรศัพท์</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td colspan="6" class="center">@Resource.Msg_NoRecords</td>
                </tr>
            </tbody>
        </table>
    </div>
}
else
{
    string sortField = Model.CustomerContactSearchFilter.SortField;
    string sortOrder = Model.CustomerContactSearchFilter.SortOrder;

    <div class="form-inline nopadding">
        <div class="form-group">
            @Html.Raw(Html.Pager(
                new Options
                {
                    PageSize = Model.CustomerContactSearchFilter.PageSize,
                    TotalItemCount = Model.CustomerContactSearchFilter.TotalRecords,
                    CurrentPage = Model.CustomerContactSearchFilter.PageNo,
                    ItemTexts = new ItemTexts
                    {
                        First = "<i class='fa fa-step-backward' style='font-size: 0.8em'></i>",
                        Previous = "<i class='fa fa-caret-left'></i>",
                        Next = "<i class='fa fa-caret-right'></i>",
                        Last = "<i class='fa fa-step-forward' style='font-size: 0.8em'></i>"
                    },
                    IsShowFirstLast = true,
                    CssClass = "pager",
                    IsShowInputPage = true
                },
                new { PageSize = ViewBag.PageSize }))
        </div>
        <div class="form-group">
            @Html.DropDownList("PageSize", new SelectList(new Dictionary<string, int> { { "15", 15 }, { "30", 30 } }, "Key", "Value"), new { @class = "form-control input-xs", id = "pagesizelist" })
        </div>
        <div class="form-group text-nowrap margin-left-8">
            <strong>
                @MvcHtmlString.Create(string.Format(Resource.Lbl_Paging, @Model.CustomerContactSearchFilter.FirstPageIndex, @Model.CustomerContactSearchFilter.LastPageIndex, @Model.CustomerContactSearchFilter.TotalRecords))
            </strong>
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="table-responsive margin-top-10">
        <table class="table table-hover datatable">
            <thead>
                <tr>
                    <th>Action</th>
                    <th>Product</th>
                    <th title="เลขที่บัตรประชาชน/นิติบุุคคล/Passport/Employee No.">Subscription ID</th>
                    <th>ชื่อผู้ติดต่อ</th>
                    <th>นามสกุลผู้ติดต่อ</th>
                    <th>ความสัมพันธ์</th>
                    <th>เลขที่บัญชี/สัญญา</th>
                    <th>เบอร์โทรศัพท์</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ContactTableList)
                {
                    var phoneNo1 = "";
                    var phoneNo2 = "";
                    var phoneNo3 = "";
                    
                    var phoneType1 = "";
                    var phoneType2 = "";
                    var phoneType3 = "";
                    
                    var faxNo = "";

                    var contactRelationshipId = item.RelationshipId;

                    var phoneNoFax = item.CustomerPhones.Where(c => c.PhoneTypeCode != Constants.PhoneTypeCode.Fax).ToList();
                    var phoneFax = item.CustomerPhones.FirstOrDefault(c => c.PhoneTypeCode == Constants.PhoneTypeCode.Fax);
                    if (phoneFax != null)
                    {
                        faxNo = phoneFax.PhoneNo;
                    }

                    if (phoneNoFax.Count > 0)
                    {
                        phoneNo1 = phoneNoFax[0].PhoneNo;
                        phoneType1 = phoneNoFax[0].PhoneTypeName;
                    }

                    if (phoneNoFax.Count > 1)
                    {
                        phoneNo2 = phoneNoFax[1].PhoneNo;
                        phoneType2 = phoneNoFax[1].PhoneTypeName;
                    }

                    if (phoneNoFax.Count > 2)
                    {
                        phoneNo3 = phoneNoFax[2].PhoneNo;
                        phoneType3 = phoneNoFax[2].PhoneTypeName;
                    }

                    <tr>
                        <td class="center">
                            <a href='javascript:;'
                               onclick='onSelectContactClick("@item.ContactId", "@item.SubscriptionType", "@item.CardNo", "@DateUtil.ToStringAsDate(item.BirthDay)", "@item.TitleTh", "@item.FirstNameTh", "@item.LastNameTh", "@item.TitleEn", "@item.FirstNameEn", "@item.LastNameEn", "@faxNo", "@item.Email", "@item.AccountNo", "@item.RelationName", "@phoneNo1", "@phoneNo2", "@phoneNo3", "@phoneType1", "@phoneType2", "@phoneType3", "@contactRelationshipId")' class='btn btn-success btn-xs'>เลือก</a>
                        </td>
                        <td>@item.Product</td>
                        <td>@item.CardNo</td>
                        @{
                            var firstname = string.IsNullOrEmpty(item.FirstNameTh)?item.FirstNameEn:item.FirstNameTh;
                            var lastname = string.IsNullOrEmpty(item.FirstNameTh)?item.LastNameEn:item.LastNameTh;
                        }
                        <td>@firstname</td>
                        <td>@lastname</td>
                        <td>@item.RelationNameDisplay</td>
                        <td>@item.AccountNo</td>
                        <td>@item.PhoneNo</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
